import numpy as np
import cv2

def click_eventfun(event,x,y,flags,param):  #mouse clicks on image are tracked by this iterative function
    if(event== cv2.EVENT_LBUTTONDOWN):  # if left key operated
        points.append((x,y))  #keeping all the touched points
        font = cv2.FONT_HERSHEY_PLAIN    #taking a font reference to print over there at (x,y)
        strXY = '(' + str(points[-1][0]) + ', ' + str(points[-1][1]) + ')'
        cv2.putText(mycolorimg, strXY, points[-1], font, 1, (255, 255, 0), 1)  # #new frame generated by erasing the past window for every iteration so create image frame outside the function
        cv2.circle(mycolorimg, points[-1], 5, (0, 0, 255), -1) #dots get printed at the touched coordinates
        if(len(points)>=2): #line is possible only between two points
           cv2.line(img,points[-1],points[-2],(255,0,0),5)
        cv2.imshow('bluprint', mycolorimg)  #blueprint image of img lines
        cv2.imshow('image',img)    #'image is the name of the displayed original operator window where clicks to be performed

mycolorimg = np.zeros((512, 512, 3), np.uint8) #blue print creation

img=np.zeros((512,512,3), np.uint8)  #creates black window for operator
font=cv2.FONT_HERSHEY_COMPLEX
cv2.putText(img, "Welcome Play With Left Click", (5,40), font, 1, (255, 255, 255), 1)
cv2.imshow('image',img) #now coloredd image so the color values gets printed, and try different clicks

points=[] #clicked points to store in this array
cv2.setMouseCallback('image',click_eventfun) #to callll (iterative loop) the click eventsa fdunctioon it just setting the initial window image
cv2.waitKey(0) #click any key to close the game
cv2.destroyAllWindows()
